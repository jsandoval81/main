
<% include header %>

<body class="content-page dark-bg">
    <!--[if lt IE 7]>
        <div id="content" style="margin-top:100px; text-align: center;">
            <h2>Hello!</h2>
            <p>It looks like you have stumbled across my website on a non-compatible browser. Please download an compatible browser (I suggest <a href="http://www.mozilla.org/en-US/firefox">Firefox</a> or <a href="https://www.google.com/intl/en/chrome/browser/">Chrome</a>). Please contact me at <a href="mailto:john.x.sandoval@gmail.com">welcome@johnsandoval.us</a>.</p>
        </div>
    <![endif]-->
    <div id="projects-table" class="content-container">
    
        <div>
            <h2><img src="/main/images/clearview.png" alt="ClearView" /></h2>
        </div>

        <div class="project-detail-back">
            <a href="/projects">&lt;&lt; Return to Projects</a>
        </div>
        <p>
            This is a project from work. I created a replacement for our legacy BI customer reporting application. The old architecture was based on <a target="_blank" href="http://www.sas.com">SAS</a> and I created the prototype on the latest version of the very powerful ETL and BI platform. This prototype adds in a modern HTML5/CSS3 front-end that integrates with the SAS data structure. It's a mobile-ready responsive design that also uses a custom drag-and-drop report dashboard and Highcharts.js.
        </p>
        
        <div class="project-entry project-detail clear">
            <img src="/main/images/Smartphone.jpg" alt="Smartphone" class="float-right" />
            <p>
                One issue facing many BI and Analytics platforms is the difficulty in extending the power and functionality all the way through your own secured network and on to your customers in a branded fashion. I've created an application based on SAS that uses a mobile, responsive, HTML5/CSS3 front-end to access the power of SAS data processing and anlytics on the back-end. We're able to leverage SAS's ETL power to aggregate data from all the data sources around the company. From there, using the SAS BI Stored Process Server, we can generate our own custom, branded front-end using many of the powerful web technologies available today. Given that SAS has been a player in the data and statistical analysis game since the 1970's, the ClearView application is a great example of old-meets-new. Keeping and transforming legacy platforms is a reality at many companies and it certainly was in this case. It was a large undertaking, especially for one developer. From the data architecture and ETL monitoring, all the way through to JavaScript and CSS - all using major components of an enterprise BI environment. 
            </p>
        </div>
        
        <div class="project-entry project-detail clear">
            <img src="/main/images/Tablet.jpg" alt="Team Integration App" class="float-left" />
            <p>
                ClearView can power next-generation 9-1-1 analytics through a multitude of avenues. I mentioned that the bulk of the data currently comes from SAS ETL data marts. However, because of the flexibility of the front-end and API middleware, it could grab reporting data from virtually anywhere. It could hook in to other BI tools like Oracle or MicroStrategy. It could also access data from lighter, more modern sources like MongoDB running across a Hadoop cluster. ClearView could even control an antire data-layer-API that calls or controls MapReduce jobs. And through its front-end it already offers integration with Highcharts.js, custom carousel interfaces, and AJAX SPA features. Also, now that SAS has announced that they will be offering their software through AWS even more flexibility will emerge.
            </p>
        </div>
        
        <div class="project-entry project-detail clear">
            <img src="/main/images/Laptop.jpg" alt="Team Integration App" class="float-right" />
            <p>
                Our customers would no longer be held back by the old, clunky, featur-less reporting applications of the 1990's and the 2000's. Even our most "entrenched" customers are clamoring for modern browser support and mobile capability. Our older application suffered from massive static HTML output, gruesome Java applets, and an all around frustrating user experience. Users knew the data was back there somewhere and they just wanted something simple to visualize it. As developers know all too well: data and systems are complex. Absorbing that complexity so that the user has an intuitive experience is solely the responsibility of the developers and IT folks. Too often the complexity is simply passed along to the end user. However, things are changing and tools like jQuery, Bootstrap, NoSQL, Node, NPM, Angular, AWS, etc. are making it easier for developers and companies to tackle the challenge of an entire stack. We've reached an age where enough of the &quot;cool tools&quot; are maturing and becoming standard. 
            </p>
        </div>

    </div>

<% include menu %>
<% include footer %>
<% include end %>